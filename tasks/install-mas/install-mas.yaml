apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: install-mas
spec:
  workspaces:
    - name: ws
  params:
    - name: cli-image-version
      type: string
      default: latest
    - name: mas-catalog-version
      type: string
      default: "v9-250731-amd64"
    - name: mas-channel
      type: string
      default: "9.1.x"
    - name: mas-app-cfg-retries
      type: string
      default: ""

    - name: mas-instance-id
      type: string
      default: "mas1"
    - name: mas-workspace-id
      type: string
      default: "ws1"
    - name: mas-workspace-name
      type: string
      default: "workspace"

    - name: ibm-entitlement-key
      type: string
      default: ""

    - name: license-file
      type: string
      default: "license.dat"

    - name: uds-email
      type: string
      default: "john@email.com"
    - name: uds-firstname
      type: string
      default: "john"
    - name: uds-lastname
      type: string
      default: "barney"

    - name: storage-rwo
      type: string
      default: "ocs-external-storagecluster-ceph-rbd"
    - name: storage-rwx
      type: string
      default: "ocs-external-storagecluster-cephfs"
    - name: storage-pipeline
      type: string
      default: "ocs-external-storagecluster-cephfs"
    - name: storage-accessmode
      type: string
      default: "ReadWriteMany"

    - name: dro-namespace
      type: string
      default: "redhat-marketplace"

    - name: mongodb-namespace
      type: string
      default: "mongoce"

    - name: iot-channel
      type: string
      default: ""

    - name: kafka-provider
      type: string
      default: "strimzi"
    - name: ibmcloud-apikey
      type: string
      default: ""
    - name: eventstreams-name
      type: string
      default: ""
    - name: eventstreams-resourcegroups
      type: string
      default: ""
    - name: eventstreams-location
      type: string
      default: ""

    - name: monitor-channel
      type: string
      default: ""

    - name: optimizer-channel
      type: string
      default: ""
    - name: optimizer-plan
      type: string
      default: "full"

    - name: predict-channel
      type: string
      default: ""
    - name: cp4d-version
      type: string
      default: "5.1.3"

    - name: facilities-channel
      type: string
      default: ""
    - name: facilities-size
      type: string
      default: "small"

    - name: assist-channel
      type: string
      default: ""

    - name: manage-channel
      type: string
      default: ""
    - name: manage-jdbc
      type: string
      default: "workspace-application"
    - name: manage-components
      type: string
      default: "base=latest,health=latest,spatial=latest,strategize=latest,serviceprovider=latest,utilities=latest,hse=latest,aip=latest"
    - name: enable-manage-demo-data
      type: string
      default: "false"
    - name: manage-base-language
      type: string
      default: "EN"
    - name: manage-server-timezone
      type: string
      default: "GMT"
    - name: manage-jms
      type: string
      default: ""
    - name: manage-persistent-volumes
      type: string
      default: ""
    - name: manage-server-bundle-size
      type: string
      default: ""

    - name: visualinspection-channel
      type: string
      default: ""

    - name: db2-channel
      type: string
      default: ""
    - name: db2-namespace
      type: string
      default: ""
    - name: db2-type
      type: string
      default: "db2wh"
    - name: db2-timezone
      type: string
      default: "GMT"
    - name: db2-cpu-requests
      type: string
      default: "4000m"
    - name: db2-cpu-limits
      type: string
      default: "6000m"
    - name: db2-memory-requests
      type: string
      default: "8Gi"
    - name: db2-memory-limits
      type: string
      default: "12Gi"
    - name: db2-backup-storage
      type: string
      default: "200Gi"
    - name: db2-data-storage
      type: string
      default: "500Gi"
    - name: db2-logs-storage
      type: string
      default: "100Gi"
    - name: db2-meta-storage
      type: string
      default: "100Gi"
    - name: db2-temp-storage
      type: string
      default: "150Gi"

    - name: use-letsencrypt-certs
      type: string
      default: "true"

    #### AI SERVICE ####
    - name: aiservice-instance-id
      type: string
      default: "mas1"
    - name: aiservice-channel
      type: string
      default: ""
    - name: minio-password
      type: string
      default: ""
    - name: minio-user
      type: string
      default: ""
    - name: watsonxai-apikey
      type: string
      default: ""
    - name: watsonxai-url
      type: string
      default: ""
    - name: watsonxai-project-id
      type: string
      default: ""
    - name: tenant-entitlement-type
      type: string
      default: "standard"
    - name: tenant-entitlement-start-date
      type: string
      default: "2025-01-01"
    - name: tenant-entitlement-end-date
      type: string
      default: "2026-01-01"
    - name: rsl-url
      type: string
      default: ""
    - name: rsl-org-id
      type: string
      default: ""
    - name: rsl-token
      type: string
      default: ""

  steps:
    - name: install-mas
      image: quay.io/ibmmas/cli:$(params.cli-image-version)
      imagePullPolicy: Always
      script: |
        #!/bin/bash

        CMD="mas install"

        # Core always-included parameters
        CMD+=" --mas-catalog-version $(params.mas-catalog-version)"
        CMD+=" --mas-channel $(params.mas-channel)"
        CMD+=" --mas-instance-id $(params.mas-instance-id)"
        CMD+=" --mas-workspace-id $(params.mas-workspace-id)"
        CMD+=" --mas-workspace-name \"$(params.mas-workspace-name)\""
        CMD+=" --ibm-entitlement-key $(params.ibm-entitlement-key)"
        CMD+=" --license-file \"$(params.license-file)\""
        CMD+=" --uds-email \"$(params.uds-email)\""
        CMD+=" --uds-firstname \"$(params.uds-firstname)\""
        CMD+=" --uds-lastname \"$(params.uds-lastname)\""
        CMD+=" --disable-walkme"
        CMD+=" --storage-class-rwo \"$(params.storage-rwo)\""
        CMD+=" --storage-class-rwx \"$(params.storage-rwx)\""
        CMD+=" --storage-pipeline \"$(params.storage-pipeline)\""
        CMD+=" --storage-accessmode \"$(params.storage-accessmode)\""
        CMD+=" --dro-namespace $(params.dro-namespace)"
        CMD+=" --mongodb-namespace $(params.mongodb-namespace)"
        CMD+=" --additional-configs "$(workspaces.ws.path)/masconfig"

        MAS_APP_CFG_RETRIES="$(params.mas-app-cfg-retries)"
        if [[ "$MAS_APP_CFG_RETRIES" != "" ]]; then
          CMD+=" --mas-app-cfg-retries $MAS_APP_CFG_RETRIES"
        fi

        # Dep: Db2, Kafka
        MAS_APP_CHANNEL_IOT="$(params.iot-channel)"
        if [[ "$MAS_APP_CHANNEL_IOT" != "" ]]; then
          CMD+=" --iot-channel $MAS_APP_CHANNEL_IOT"
          KAFKA_PROVIDER=$(params.kafka-provider)
          KAFKA_FLAGS=""
          if [[ "$KAFKA_PROVIDER" == "ibm" ]]; then
            KAFKA_FLAGS+=" --kafka-provider $KAFKA_PROVIDER --ibmcloud-apikey $(params.ibmcloud-apikey)"
            KAFKA_FLAGS+=" --eventstreams-resource-group $(params.eventstreams-resourcegroups) --eventstreams-instance-name $(params.eventstreams-name)"
            KAFKA_FLAGS+=" --eventstreams-instance-location ${params.eventstreams-location}"
          else
            KAFKA_FLAGS+=" --kafka-provider $KAFKA_PROVIDER"
          fi
          CMD+="$KAFKA_FLAGS --db2-system"
        fi

        # Dep: IoT, Kafka, Mongo, Db2. 
        MAS_APP_CHANNEL_MONITOR="$(params.monitor-channel)"
        if [[ "$MAS_APP_CHANNEL_MONITOR" != "" ]]; then
          CMD+=" --monitor-channel $MAS_APP_CHANNEL_MONITOR"
        fi

        MAS_APP_CHANNEL_OPTIMIZER="$(params.optimizer-channel)"
        if [[ "$MAS_APP_CHANNEL_OPTIMIZER" != "" ]]; then
          CMD+=" --optimizer-channel $MAS_APP_CHANNEL_OPTIMIZER"
          CMD+=" --optimizer-plan $(params.optimizer-plan)"
        fi

        # Dep: Monitor, CP4D
        MAS_APP_CHANNEL_PREDICT="$(params.predict-channel)"
        if [[ "$MAS_APP_CHANNEL_PREDICT" != "" ]]; then
          CMD+=" --predict-channel $MAS_APP_CHANNEL_PREDICT"
          CMD+=" --cp4d-version $(params.cp4d-version)"
        fi

        # Dep: Db2
        MAS_APP_CHANNEL_MREF="$(params.facilities-channel)"
        if [[ "$MAS_APP_CHANNEL_MREF" != "" ]]; then
          CMD+=" --facilities-channel $MAS_APP_CHANNEL_MREF --facilities-size $(params.facilities-size)"
          CMD+=" --db2-facilities"
        fi

        # Dep: Cloud Object Storage
        MAS_APP_CHANNEL_ASSIST="$(params.assist-channel)"
        if [[ "$MAS_APP_CHANNEL_ASSIST" != "" ]]; then
          CMD+=" --assist-channel $MAS_APP_CHANNEL_ASSIST --cos 'ocs'"
        fi

        MAS_APP_CHANNEL_VI="$(params.visualinspection-channel)"
        if [[ "$MAS_APP_CHANNEL_VI" != "" ]]; then
          CMD+=" --visualinspection-channel $MAS_APP_CHANNEL_VI"
        fi

        # Dep: Db2
        MAS_APP_CHANNEL_MANAGE="$(params.manage-channel)"
        if [[ "$MAS_APP_CHANNEL_MANAGE" != "" ]]; then
          CMD+=" --manage-channel $MAS_APP_CHANNEL_MANAGE"
          CMD+=" --db2-manage"
          CMD+=" --manage-jdbc $(params.manage-jdbc)"
          CMD+=" --manage-components '$(params.manage-components)'"

          ENABLE_DEMO_DATA="$(params.enable-manage-demo-data)"
          if [[ "$ENABLE_DEMO_DATA" == "true" ]]; then
            CMD+=" --manage-demodata"
          fi

          # Language and location Configuration
          CMD+=" --manage-base-language $(params.manage-base-language)"
          CMD+=" --manage-server-timezone $(params.manage-server-timezone)"

          # JMS Configuration
          MAS_APP_SETTINGS_DEFAULT_JMS="$(params.manage-jms)"
          if [[ "$MAS_APP_SETTINGS_DEFAULT_JMS" != "" ]]; then
            CMD+=" --manage-jms"
          fi
          MAS_APP_SETTINGS_PERSISTENT_VOLUME="$(params.manage-persistent-volumes)"
          if [[ "$MAS_APP_SETTINGS_PERSISTENT_VOLUME" != "" ]]; then
            CMD+=" --manage-persistent-volume"
          fi
          MAS_APP_SETTINGS_SERVER_BUNDLES_SIZE="$(params.manage-server-bundle-size)"
          if [[ "$MAS_APP_SETTINGS_SERVER_BUNDLES_SIZE" != "" ]]; then
            CMD+=" --manage-server-bundle-size '$MAS_APP_SETTINGS_SERVER_BUNDLES_SIZE'"
          fi
        fi

        # DB2 Advanced Configuration
        DB2_CHANNEL=$(params.db2-channel)
        if [[ "$DB2_CHANNEL" != "" ]]; then
          CMD+=" --db2-channel $DB2_CHANNEL"
        fi
        DB2_NAMESPACE=$(params.db2-namespace)
        if [[ "$DB2_NAMESPACE" != "" ]]; then
          CMD+=" --db2-namespace $DB2_NAMESPACE"
        fi
        CMD+=" --db2-type $(params.db2-type)"
        CMD+=" --db2-timezone $(params.db2-timezone)"
        CMD+=" --db2-cpu-requests $(params.db2-cpu-requests)"
        CMD+=" --db2-cpu-limits $(params.db2-cpu-limits)"
        CMD+=" --db2-memory-requests $(params.db2-memory-requests)"
        CMD+=" --db2-memory-limits $(params.db2-memory-limits)"
        CMD+=" --db2-backup-storage $(params.db2-backup-storage)"
        CMD+=" --db2-data-storage $(params.db2-data-storage)"
        CMD+=" --db2-logs-storage $(params.db2-logs-storage)"
        CMD+=" --db2-meta-storage $(params.db2-meta-storage)"
        CMD+=" --db2-temp-storage $(params.db2-temp-storage)"

        # Manual Certs
        USE_MANUAL_CERTS=$(params.use-letsencrypt-certs)
        if [[ "$USE_MANUAL_CERTS" == "true" ]]; then
          CMD+=" --manual-certificates $(workspaces.ws.path)/masconfig/certs"
        fi

        # Final flags
        CMD+=" --accept-license"
        CMD+=" --no-confirm"
        CMD+=" --skip-pre-check"

        # Output for debugging
        echo "Final MAS install command:"
        echo "$CMD"

        eval "$CMD"
    - name: install-ai-service
      image: quay.io/ibmmas/cli:$(params.cli-image-version)
      imagePullPolicy: Always
      script: |
        #!/bin/bash
        
        AISERVICE_CHANNEL=$(params.aiservice-channel)
        if [[ $AISERVICE_CHANNEL != "" ]]; then
          # Verify empty vars
          
          [[ "$(params.minio-user)" == "" ]] && echo "Missing minio user" && exit 1
          [[ "$(params.minio-password)" == "" ]] && echo "Missing minio password" && exit 1
          [[ "$(params.watsonxai-apikey)" == "" ]] && echo "Missing watsonX apikey" && exit 1
          [[ "$(params.watsonxai-url)" == "" ]] && echo "Missing watsonX url" && exit 1
          [[ "$(params.watsonxai-project-id)" == "" ]] && echo "Missing watsonX project id" && exit 1
          [[ "$(params.tenant-entitlement-type)" == "" ]] && echo "Missing entitlement type" && exit 1
          [[ "$(params.tenant-entitlement-start-date)" == "" ]] && echo "Missing entitlement start date" && exit 1
          [[ "$(params.tenant-entitlement-end-date)" == "" ]] && echo "Missing entitlement end date" && exit 1
          
          CMD="mas aiservice-install"
          CMD+=" --mas-catalog-version $(params.mas-catalog-version)"
          CMD+=" --aiservice-instance-id $(params.aiservice-instance-id)"
          CMD+=" --ibm-entitlement-key $(params.ibm-entitlement-key)"
          CMD+=" --license-file \"$(params.license-file)\""
          CMD+=" --uds-email \"$(params.uds-email)\""
          CMD+=" --uds-firstname \"$(params.uds-firstname)\""
          CMD+=" --uds-lastname \"$(params.uds-lastname)\""
          CMD+=" --storage-class-rwo \"$(params.storage-rwo)\""
          CMD+=" --storage-class-rwx \"$(params.storage-rwx)\""
          CMD+=" --storage-pipeline \"$(params.storage-pipeline)\""
          CMD+=" --storage-accessmode \"$(params.storage-accessmode)\""
          CMD+=" --dro-namespace $(params.dro-namespace)"
          CMD+=" --mongodb-namespace $(params.mongodb-namespace)"
          CMD+=" --aiservice-channel $(params.aiservice-channel)"         
          CMD+=" --install-minio"
          CMD+=" --minio-root-user $(params.minio-user)"
          CMD+=" --minio-root-password $(params.minio-password)"
          CMD+=" --watsonxai-apikey $(params.watsonxai-apikey)"
          CMD+=" --watsonxai-url $(params.watsonxai-url)"
          CMD+=" --watsonxai-project-id $(params.watsonxai-project-id)"
          CMD+=" --tenant-entitlement-type $(params.tenant-entitlement-type)"
          CMD+=" --tenant-entitlement-start-date $(params.tenant-entitlement-start-date)"
          CMD+=" --tenant-entitlement-end-date $(params.tenant-entitlement-end-date)"
          CMD+=" --additional-configs "$(workspaces.ws.path)/masconfig"

          USE_MANUAL_CERTS=$(params.use-letsencrypt-certs)
          if [[ "$USE_MANUAL_CERTS" == "true" ]]; then
            CMD+=" --manual-certificates $(workspaces.ws.path)/masconfig/certs"
          fi
          
          # Optional for AI Service
          RSL_URL=$(params.rsl-url)
          if [[ $RSL_URL != "" ]]; then
            CMD+=" --rsl-url $(params.rsl-url)"
          fi
          RSL_ORG_ID=$(params.rsl-org-id)
          if [[ $RSL_ORG_ID != "" ]]; then
            CMD+=" --rsl-org-id $(params.rsl-org-id)"
          fi
          RSL_TOKEN=$(params.rsl-token)
          if [[ $RSL_TOKEN != "" ]]; then
            CMD+=" --rsl-token 'Bearer $(params.rsl-token)'"
          fi 
          
          CMD+=" --accept-license --image-pull-policy Always --skip-pre-check --no-confirm;"

          echo "$CMD"

          eval "$CMD"
        fi
