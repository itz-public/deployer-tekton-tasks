---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: create-ibm-entitlement-secret
spec:
  params:
    - name: ibm-entitlement-key
      type: string
      description: the users entitlement key if not using tz key
      default: ""
    - name: tz-ibm-entitlement-key
      type: string
      description: tz entitlement key if user didn't supply one
      default: ""
    - name: namespace
      type: string
      default: default
      description: the namespace to deploy the ibm entitlement key secret to
  results:
    - name: entitlement-key
      type: string
      description: the final key to rule them all
  steps:
    - name: check-entitlement-key
      image: podman:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      script: |
        if [ "$(params.ibm-entitlement-key)" != "" ]; then
          echo "user provided key - $(params.ibm-entitlement-key)"
          ENTITLEMENT_KEY="$(params.ibm-entitlement-key)"
        else
          echo "techzone key - $(params.tz-ibm-entitlement-key)"
          ENTITLEMENT_KEY="$(params.tz-ibm-entitlement-key)"
        fi

        echo "Testing entitlement key with registry: cp.icr.io"
        if output=$(podman login cp.icr.io --username cp --password "$ENTITLEMENT_KEY" 2>&1); then
          echo "Login to cp.icr.io successful"
        else
          echo "Login failed with exit code $? - $output"
        fi

        echo "$ENTITLEMENT_KEY" | tee $(results.entitlement-key.path)
    - name: create-entitlement-key-secret
      image: quay.io/openshift/origin-cli:4.16
      script: |
        read -r ENTITLEMENT_KEY < /tekton/results/entitlement-key
        oc apply -f - <<EOF
        apiVersion: v1
        kind: Secret
        metadata:
          name: cloud-pak-entitlement-key
          namespace: $(params.namespace)
        type: Opaque
        stringData:
          cp-entitlement-key: |
            $ENTITLEMENT_KEY
        EOF
